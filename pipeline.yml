---
jobs:
- name: deploy-logsearch-production
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: logsearch-config
    - get: common-prod
    - get: cg-s3-logsearch-release
    - get: logsearch-stemcell
  - task: logsearch-manifest
    config:
      platform: linux
      image: docker:///18fgsa/concourse-task
      inputs:
      - name: logsearch-config
      - name: common-prod
      run:
        path: logsearch-config/generate.sh
        args: ["common-prod/secrets.yml", "logsearch-manifest/manifest.yml"]
      outputs:
      - name: logsearch-manifest
  - put: logsearch-production-deployment
    params:
      cert: common-prod/boshCA.crt
      manifest: logsearch-manifest/manifest.yml
      releases:
        - cg-s3-logsearch-release/*.tgz
      stemcells:
        - logsearch-stemcell/*.tgz
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy logsearch on production
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed logsearch on production
          <https://ci.cloud.gov/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
- name: push-kibana-production
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: common-prod
      passed: [deploy-logsearch-production]
  - task: kibana-errand
    file: pipeline-tasks/bosh-errand.yml
    config:
      params:
        BOSH_TARGET: {{logsearch-production-deployment-bosh-target}}
        BOSH_USERNAME: {{logsearch-production-deployment-bosh-username}}
        BOSH_PASSWORD: {{logsearch-production-deployment-bosh-password}}
        BOSH_DEPLOYMENT_NAME: {{logsearch-production-deployment-bosh-deployment}}
        BOSH_ERRAND: push-kibana
        BOSH_CACERT: common-prod/boshCA.crt
- name: push-event-logger
  plan:
  - aggregate:
    - get: event-logger-app
      trigger: true
  - put: deploy-event-logger-app
    params:
      manifest: event-logger-app/manifest.yml
      path: event-logger-app
      current_app_name: cf-app-events-logger
      environment_variables:
        CF_USER: {{cf-admin-username}}
        CF_PASSWORD: {{cf-admin-password}}
        CF_API: {{cf-api-url}}

resources:
- name: common-prod
  type: cg-common
  source:
    bucket_name: {{logsearch-private-bucket-production}}
    access_key_id: {{logsearch-private-access-key-id-production}}
    secret_access_key: {{logsearch-private-secret-access-key-production}}
    secrets_file: logsearch.yml
    secrets_passphrase: {{logsearch-production-private-passphrase}}
    bosh_cert: bosh.pem

- name: cg-s3-logsearch-release
  type: s3
  source:
    access_key_id: {{cg-s3-bosh-releases-access-key-id}}
    bucket: {{cg-s3-bosh-releases-bucket}}
    private: true
    regexp: logsearch-for-cloudfoundry-(.*).tgz
    secret_access_key: {{cg-s3-bosh-releases-secret-access-key}}

- name: logsearch-config
  type: git
  source:
    uri: {{cg-deploy-logsearch-git-url}}
    branch: {{cg-deploy-logsearch-git-branch}}

- name: logsearch-stemcell
  type: bosh-io-stemcell
  source:
    name: {{logsearch-stemcell}}

- name: logsearch-production-deployment
  type: bosh-deployment
  source:
    target: {{logsearch-production-deployment-bosh-target}}
    username: {{logsearch-production-deployment-bosh-username}}
    password: {{logsearch-production-deployment-bosh-password}}
    deployment: {{logsearch-production-deployment-bosh-deployment}}
    ignore_ssl: false

- name: event-logger-app
  type: git
  source:
    uri: {{event-logger-app-git-url}}
    branch: {{event-logger-app-git-branch}}

- name: deploy-event-logger-app
  type: cf
  source:
    api: {{cf-api-url}}
    username: {{cf-deploy-username}}
    password: {{cf-deploy-password}}
    organization: {{cf-organization}}
    space: {{cf-space}}
    skip_cert_check: false

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}
