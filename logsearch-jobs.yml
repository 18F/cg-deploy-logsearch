---
meta:
  <<: (( merge ))

  elasticsearch_master_templates:
  - name: api
    release: logsearch
  - name: elasticsearch
    release: logsearch
  - name: elasticsearch_config
    release: logsearch
  - name: curator
    release: logsearch

  elasticsearch_data_templates:
  - name: elasticsearch
    release: logsearch

  queue_templates:
  - name: queue
    release: logsearch

  parser_templates:
  - name: parser
    release: logsearch

  ingestor_syslog_templates:
  - name: ingestor_syslog
    release: logsearch
  - name: ingestor_relp
    release: logsearch

  ingestor_firehose_templates:
  - name: ingestor_cloudfoundry-firehose
    release: logsearch-for-cloudfoundry
  - name: collector
    release: logsearch-for-cloudfoundry

  hardening_templates:
  - name: harden
    release: fisma
  - name: tripwire
    release: tripwire
  - name: riemannc
    release: riemannc
  - name: clamav
    release: clamav
  - name: snort
    release: snort
  - name: awslogs
    release: awslogs
  - name: nessus-agent
    release: nessus-agent
  - name: newrelic-monitor
    release: newrelic

  monitoring_templates:
  - name: collectd
    release: collectd

networks: (( merge ))
name: (( merge ))

properties:
  <<: (( merge ))
  collector:
    deployment_name: CF
    use_gelf: true
    gelf:
      address: 127.0.0.1
  nats:
    password: (( merge ))
    user: (( merge ))
    port: (( merge || 4222 ))
    machines: (( merge ))
  curator:
    <<: (( merge ))
    elasticsearch_host: (( jobs.elasticsearch_master.networks.default.static_ips.[0] ))
    purge_logs:
      retention_period: (( merge || 180 ))
  logstash:
    output:
      elasticsearch:
        flush_size: 1000
  logstash_parser:
    <<: (( merge ))
    debug: false
    elasticsearch_index: "logs-%{[@metadata][index]}-%{+YYYY.MM.dd}"
    elasticsearch_index_type: "%{[@metadata][type]}"
  logstash_ingestor:
    <<: (( merge ))
    debug: false
    syslog:
      port: 514
  push-kibana:
    app_name: logs
    app_instances: 3
    oauth2_client_id: logsearch-for-cloudfoundry
    oauth2_client_secret: (( merge ))
  redis:
    host: (( jobs.queue.networks.default.static_ips.[0] ))
  elasticsearch:
    <<: (( merge ))
    admin_ip: (( jobs.elasticsearch_master.networks.default.static_ips.[0] ))
    log_level: INFO
    discovery:
      minimum_master_nodes: 1
    master_hosts: (( jobs.elasticsearch_master.networks.default.static_ips ))  #NB This should contain all the elasticsearch_master IPs
    cluster_name: (( name ))
  elasticsearch_config:
    elasticsearch:
      host: (( jobs.elasticsearch_master.networks.default.static_ips.[0] ))
  cloudfoundry:
    skip_ssl_validation: true
    system_domain: (( merge ))
    system_org: (( merge ))
    apps_domain: (( merge || properties.cloudfoundry.system_domain ))
    api_access_security_group: (( merge ))
    firehose_port: (( merge ))
    firehose_user: (( merge ))
    firehose_password: (( merge ))
    admin_username: (( merge ))
    admin_password: "(( merge ))"
    admin_client_secret: "(( merge ))"

jobs:
- name: elasticsearch_master
  templates: (( merge || meta.elasticsearch_master_templates meta.hardening_templates meta.monitoring_templates ))
  instances: 1
  update:
    serial: true
  resource_pool: medium
  networks:
  - name: default
    static_ips: (( static_ips(0) ))
  persistent_disk_pool: elasticsearch_master
  properties:
    elasticsearch:
      <<: (( merge ))
      node:
        allow_master: true
        allow_data: false

- name: elasticsearch_data
  templates: (( merge || meta.elasticsearch_data_templates meta.hardening_templates meta.monitoring_templates ))
  instances: 5
  resource_pool: high_cpu_high_memory
  networks:
  - name: default
  persistent_disk_pool: elasticsearch_data
  update:
    max_in_flight: 1
  properties:
    elasticsearch:
      <<: (( merge ))
      drain: true
      node:
        allow_master: false
        allow_data: true

- name: queue
  templates: (( merge || meta.queue_templates meta.hardening_templates meta.monitoring_templates ))
  instances: 1
  update:
    serial: true
  resource_pool: high_memory
  persistent_disk_pool: queue
  networks:
  - name: default
    static_ips: (( static_ips(1) ))

- name: parser
  templates: (( merge || meta.parser_templates meta.hardening_templates meta.monitoring_templates ))
  instances: 1
  resource_pool: high_cpu
  networks:
  - name: default

- name: ingestor_syslog
  templates: (( merge || meta.ingestor_syslog_templates meta.hardening_templates meta.monitoring_templates ))
  instances: 1
  resource_pool: medium
  networks:
  - name: default
    static_ips: (( static_ips(2) ))

- name: ingestor_firehose
  templates: (( merge || meta.ingestor_firehose_templates meta.hardening_templates meta.monitoring_templates ))
  instances: 1
  resource_pool: medium
  networks:
  - name: default

- name: push-kibana
  templates:
  - { release: logsearch-for-cloudfoundry, name: push-kibana }
  lifecycle: errand
  instances: 1
  resource_pool: tiny
  networks:
  - name: default

